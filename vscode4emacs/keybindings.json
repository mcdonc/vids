// Place your key bindings in this file to override the defaults

[
    {
        "key":"tab",
        "command":"emacs-tab.reindentCurrentLine",
        "when":"editorTextFocus && !inlineSuggestionVisible"
     },
     {
        "key": "alt+t",
        "command": "editor.action.insertSnippet",
        "when": "editorTextFocus && editorLangId == python",
        "args": {
            "snippet": "import pdb; pdb.set_trace()$0"
        }
    },
    // dont put the cursor at the first nonwhitespace character
    {
        "key": "ctrl+a",
        "command": "cursorLineStart",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+e",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
        "key": "alt+d",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+x d",
        "command": "vsnetrw.open"
    },
    {
        "key": "shift+6",
        "command": "vsnetrw.openParent",
        "when": "editorTextFocus && editorLangId == 'vsnetrw' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "-",
        "command": "-vsnetrw.openParent",
        "when": "editorTextFocus && editorLangId == 'vsnetrw' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "shift+=",
        "command": "vsnetrw.createDir",
        "when": "editorTextFocus && editorLangId == 'vsnetrw' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "d",
        "command": "-vsnetrw.createDir",
        "when": "editorTextFocus && editorLangId == 'vsnetrw' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "ctrl+/",
        "command": "-undo",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+;",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd && !editorReadonly"
    },
    {
        "key": "alt+;",
        "command": "-editor.action.blockComment",
        "when": "config.emacs-mcx.useMetaPrefixMacCmd && editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+;",
        "command": "-emacs-mcx.isearchExit",
        "when": "config.emacs-mcx.useMetaPrefixMacCmd && editorFocus && findWidgetVisible && !isComposing"
    },
    {
        "key": "alt+;",
        "command": "-emacs-mcx.isearchExit",
        "when": "editorFocus && findWidgetVisible && !config.emacs-mcx.useMetaPrefixMacCmd && !isComposing"
    },
    {
        "key": "alt+;",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+;",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "n",
        "command": "vsnetrw.create",
        "when": "editorTextFocus && editorLangId == 'vsnetrw' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "shift+5",
        "command": "-vsnetrw.create",
        "when": "editorTextFocus && editorLangId == 'vsnetrw' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "alt+f",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "tab",
        "command": "-editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "tab",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "tab",
        "command": "-acceptSelectedSuggestion",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+v",
        "command": "-emacs-mcx.scrollUpCommand",
        "when": "editorTextFocus && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+v",
        "command": "-emacs-mcx.isearchExit",
        "when": "editorFocus && findWidgetVisible && !isComposing"
    }
]
